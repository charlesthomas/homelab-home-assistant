---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: home-assistant
  namespace: home-assistant
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: home-assistant
      app.kubernetes.io/instance: home-assistant
  template:
    metadata:
      labels:
        app.kubernetes.io/name: home-assistant
        app.kubernetes.io/instance: home-assistant
    spec:
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirstWithHostNet
      enableServiceLinks: true
      containers:
        - name: home-assistant
          image: "ghcr.io/home-assistant/home-assistant:2023.12.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: America/Detroit
            - name: LATITUDE
              valueFrom:
                secretKeyRef:
                  name: home-assistant
                  key: latitude
            - name: LONGITUDE
              valueFrom:
                secretKeyRef:
                  name: home-assistant
                  key: longitude
          ports:
            - name: http
              containerPort: 8123
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8123
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8123
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          resources: {}
          startupProbe:
            tcpSocket:
              port: 8123
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          volumeMounts:
            - mountPath: /config
              name: config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: home-assistant
        - name: configuration
          configMap:
            name: configuration
        - name: automations
          configMap:
            name: automations
        - name: dashboards
          configMap:
            name: dashboards
      hostNetwork: true
      initContainers:
        - name: copy
          command:
          - /bin/sh
          - -c
          - 'cp -v /configuration-yaml/configuration.yaml /automations-yaml/automations.yaml /dashboards-yaml/dashboards.yaml /config/'
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /configuration-yaml/
            name: configuration
          - mountPath: /automations-yaml/
            name: automations
          - mountPath: /dashboards-yaml/
            name: dashboards
